unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Imaging.pngimage,
  Vcl.Imaging.jpeg;

type
  TForm1 = class(TForm)
    Image1: TImage;
    Image2: TImage;
    Image3: TImage;
    Image4: TImage;
    ImgHelicop: TImage;
    Image6: TImage;
    Timer1: TTimer;
    Image7: TImage;
    procedure FormMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure FormMouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }
    function colision(obj1,obj2:Timage):boolean;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  rotarhelice:integer = 1;
  mousepresionado  :boolean = false;

  distancia : integer = 0;
  velocidadObstaculo : integer = 5;


implementation

{$R *.dfm}

function TForm1.colision(obj1, obj2: Timage): boolean;
begin
  result:= obj1.BoundsRect.IntersectsWith(obj2.BoundsRect);
end;

procedure TForm1.FormMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
   if button = mbleft then
   begin
      ImgHelicop.Top:= ImgHelicop.Top - 20;
      mousePresionado:= true;
   end;
end;

procedure TForm1.FormMouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  mousePresionado:= false;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
   case rotarHelice of
     1:imgHelice.Picture.LoadFromFile('elise1.png')
   end;
end;

end.
